    .syntax unified

    INTR_VECTOR = 0x03007FFC

    @ _start

    .global _start
    .type _start, function

    .arm
_start:
    b .Lentry

    .byte 0x24, 0xFF, 0xAE, 0x51, 0x69, 0x9A, 0xA2, 0x21, 0x3D, 0x84, 0x82, 0x0A
    .byte 0x84, 0xE4, 0x09, 0xAD, 0x11, 0x24, 0x8B, 0x98, 0xC0, 0x81, 0x7F, 0x21, 0xA3, 0x52, 0xBE, 0x19
    .byte 0x93, 0x09, 0xCE, 0x20, 0x10, 0x46, 0x4A, 0x4A, 0xF8, 0x27, 0x31, 0xEC, 0x58, 0xC7, 0xE8, 0x33
    .byte 0x82, 0xE3, 0xCE, 0xBF, 0x85, 0xF4, 0xDF, 0x94, 0xCE, 0x4B, 0x09, 0xC1, 0x94, 0x56, 0x8A, 0xC0
    .byte 0x13, 0x72, 0xA7, 0xFC, 0x9F, 0x84, 0x4D, 0x73, 0xA3, 0xCA, 0x9A, 0x61, 0x58, 0x97, 0xA3, 0x27
    .byte 0xFC, 0x03, 0x98, 0x76, 0x23, 0x1D, 0xC7, 0x61, 0x03, 0x04, 0xAE, 0x56, 0xBF, 0x38, 0x84, 0x00
    .byte 0x40, 0xA7, 0x0E, 0xFD, 0xFF, 0x52, 0xFE, 0x03, 0x6F, 0x95, 0x30, 0xF1, 0x97, 0xFB, 0xC0, 0x85
    .byte 0x60, 0xD6, 0x80, 0x25, 0xA9, 0x63, 0xBE, 0x03, 0x01, 0x4E, 0x38, 0xE2, 0xF9, 0xA2, 0x34, 0xFF
    .byte 0xBB, 0x3E, 0x03, 0x44, 0x78, 0x00, 0x90, 0xCB, 0x88, 0x11, 0x3A, 0x94, 0x65, 0xC0, 0x7C, 0x63
    .byte 0x87, 0xF0, 0x3C, 0xAF, 0xD6, 0x25, 0xE4, 0x8B, 0x38, 0x0A, 0xAC, 0x72, 0x21, 0xD4, 0xF8, 0x07
    .byte 0x46, 0x49, 0x52, 0x45, 0x45, 0x4D, 0x42, 0x4C, 0x45, 0x4D, 0x45, 0x00, 0x41, 0x45, 0x37, 0x45
    .byte 0x30, 0x31, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x00, 0x00

.Lentry:
    mov r0, #0x12
    msr cpsr_fc, r0
    ldr sp, .L080000F8 @ =0x03007FA0

    mov r0, #0x1f
    msr cpsr_fc, r0
    ldr sp, .L080000F4 @ =0x03007E00

    ldr r1, .L0800021C @ =INTR_VECTOR
    add r0, pc, #0x18 @ =IntrMain
    str r0, [r1]
    ldr r1, .L08000220 @ =AgbMain
    mov lr, pc
    bx r1
    b .Lentry

    .align 2, 0
.L080000F4: .4byte 0x03007E00
.L080000F8: .4byte 0x03007FA0

    .align 2, 0
    .size _start, . - _start

    @ IntrMain

    .global IntrMain
    .type IntrMain, function

    .arm
IntrMain: @ 0x080000FC
    mov r3, #0x4000000
    add r3, r3, #0x200
    ldr r2, [r3]
    lsl r1, r2, #0x10
    lsr r1, r1, #0x10
    mrs r0, spsr
    push {r0, r1, r3, lr}
    and r1, r2, r2, lsr #16
    ands r0, r1, #0x2000
.L08000120:
    bne .L08000120
    mov r2, #0
    ands r0, r1, #1
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #2
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #4
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #8
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x10
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x20
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x40
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x80
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x100
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x200
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x400
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x800
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x1000
    bne .L080001CC
    add r2, r2, #4
    ands r0, r1, #0x2000
.L080001C8:
    bne .L080001C8
.L080001CC:
    strh r0, [r3, #2]
    mrs r3, apsr
    bic r3, r3, #0xdf
    orr r3, r3, #0x1f
    msr cpsr_fc, r3
    ldr r1, .L08000224 @ =IntrFuncTable
    add r1, r1, r2
    ldr r0, [r1]
    stmdb sp!, {lr}
    add lr, pc, #0x0 @ =0x080001F8
    bx r0
    ldm sp!, {lr}
    mrs r3, apsr
    bic r3, r3, #0xdf
    orr r3, r3, #0x92
    msr cpsr_fc, r3
    pop {r0, r1, r3, lr}
    strh r1, [r3]
    msr spsr_fc, r0
    bx lr
    .align 2, 0
.L0800021C: .4byte INTR_VECTOR
.L08000220: .4byte AgbMain
.L08000224: .4byte IntrFuncTable

    .align 2, 0
    .size IntrMain, . - IntrMain
